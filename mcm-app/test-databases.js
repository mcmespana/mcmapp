// Test comparativo de conectividad Firebase vs Supabase
require('dotenv').config({ path: '.env.local' });

const { initializeApp } = require('firebase/app');
const { getDatabase, ref, get } = require('firebase/database');
const { createClient } = require('@supabase/supabase-js');

async function testBothDatabases() {
  console.log('üî• === COMPARATIVA: FIREBASE vs SUPABASE ===\n');

  // Test Firebase
  console.log('üî• FIREBASE TEST:');
  console.log('================');
  
  const firebaseConfigured = process.env.EXPO_PUBLIC_FIREBASE_API_KEY && 
                            process.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID;
  
  if (firebaseConfigured) {
    try {
      const firebaseConfig = {
        apiKey: process.env.EXPO_PUBLIC_FIREBASE_API_KEY,
        authDomain: process.env.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN,
        databaseURL: process.env.EXPO_PUBLIC_FIREBASE_DATABASE_URL,
        projectId: process.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID,
        storageBucket: process.env.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET,
        messagingSenderId: process.env.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
        appId: process.env.EXPO_PUBLIC_FIREBASE_APP_ID,
      };

      const app = initializeApp(firebaseConfig);
      const db = getDatabase(app);
      console.log('‚úÖ Firebase: Cliente inicializado');
      
      const rootRef = ref(db, '/');
      const rootSnapshot = await get(rootRef);
      
      if (rootSnapshot.exists()) {
        const rootData = rootSnapshot.val();
        const nodes = Object.keys(rootData);
        console.log(`‚úÖ Firebase: Conectado - ${nodes.length} nodos encontrados`);
      } else {
        console.log('‚ö†Ô∏è  Firebase: Conectado pero base de datos vac√≠a');
      }
    } catch (error) {
      console.log('‚ùå Firebase: Error de conexi√≥n -', error.message);
    }
  } else {
    console.log('‚ùå Firebase: No configurado (variables de entorno faltantes)');
  }

  console.log('\nüîß SUPABASE TEST:');
  console.log('=================');
  
  const supabaseConfigured = process.env.EXPO_PUBLIC_SUPABASE_URL && 
                            process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;
  
  if (supabaseConfigured) {
    try {
      const supabase = createClient(
        process.env.EXPO_PUBLIC_SUPABASE_URL,
        process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY
      );
      console.log('‚úÖ Supabase: Cliente inicializado');
      
      // Test simple de conectividad
      const { error } = await supabase
        .from('ping_test')
        .select('*')
        .limit(1);
      
      if (error) {
        if (error.message.includes('relation "ping_test" does not exist')) {
          console.log('‚úÖ Supabase: Conectado (error esperado de tabla inexistente)');
        } else if (error.message.includes('authentication required')) {
          console.log('‚úÖ Supabase: Conectado (requiere autenticaci√≥n)');
        } else if (error.message.includes('fetch failed')) {
          console.log('‚ùå Supabase: Error de red o credenciales incorrectas');
        } else {
          console.log('‚ö†Ô∏è  Supabase: Conectado con restricciones -', error.message);
        }
      } else {
        console.log('‚úÖ Supabase: Conectado completamente');
      }
    } catch (error) {
      console.log('‚ùå Supabase: Error de conexi√≥n -', error.message);
    }
  } else {
    console.log('‚ùå Supabase: No configurado (variables de entorno faltantes)');
  }

  // Resumen
  console.log('\nüìä RESUMEN:');
  console.log('===========');
  console.log(`üî• Firebase: ${firebaseConfigured ? 'Configurado' : 'No configurado'}`);
  console.log(`üîß Supabase: ${supabaseConfigured ? 'Configurado' : 'No configurado'}`);
  
  if (!firebaseConfigured && !supabaseConfigured) {
    console.log('\n‚ùå Ninguna base de datos est√° configurada');
    console.log('üìù Configura al menos una en tu archivo .env.local');
  } else if (firebaseConfigured && supabaseConfigured) {
    console.log('\n‚úÖ Ambas bases de datos est√°n configuradas');
    console.log('üéØ Puedes elegir cu√°l usar para tu aplicaci√≥n');
  } else {
    const configured = firebaseConfigured ? 'Firebase' : 'Supabase';
    console.log(`\n‚ö†Ô∏è  Solo ${configured} est√° configurado`);
  }

  console.log('\nüéâ === TEST COMPLETADO ===');
}

// Ejecutar test
testBothDatabases();