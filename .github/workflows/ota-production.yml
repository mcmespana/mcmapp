# .github/workflows/ota-production.yml
name: OTA Production

on:
  push:
    branches: [ production ]

jobs:
  publish-prod:
    runs-on: ubuntu-latest
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }} # yamllint disable-line
      EXPO_PUBLIC_FIREBASE_API_KEY: ${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}
      EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      EXPO_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.EXPO_PUBLIC_FIREBASE_DATABASE_URL }}
      EXPO_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_PROJECT_ID }}
      EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      EXPO_PUBLIC_FIREBASE_APP_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_APP_ID }}
      EXPO_PUBLIC_CORS_PROXY_URL: ${{ secrets.EXPO_PUBLIC_CORS_PROXY_URL }}
    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Instalar EAS CLI
        run: npm install -g eas-cli@latest
        
      - name: Instalar dependencias
        working-directory: ./mcm-app
        run: npm ci
        
      - name: Verificar autenticaciÃ³n
        run: eas whoami
        
      - name: Publicar OTA en production
        working-directory: ./mcm-app
        run: |
          eas update \
            --branch production \
            --message "ðŸš€ OTA Production: ${{ github.sha }}" \
            --non-interactive
